import socket
import hashlib
import hmac
client_A = socket.socket()
client_A.connect(("localhost", 8888))
# name = input("enter the number")
name = "client_A"
client_A.send(bytes(name, "utf-8"))
key = 15
def encrypt(text,key):
    e_message = ""
    for i in text:
        if i.isalpha():
            upper_case = i.isupper()

            l_change = chr((ord(i) - ord('A' if upper_case else 'a') + key) % 26 + ord('A' if upper_case else 'a'))
            e_message += l_change
        else:
            e_message += i
    return e_message
def encrypt_key(key):
    e_key = " "

def decrypt(text, shift_value):
    return encrypt(text, -shift_value)

def HMAC_cal(key,message):
    key = key.to_bytes((key.bit_length()+7)//8,"big")
    message = bytes(message,"utf-8")
    hashing = hmac.new(key,message,hashlib.sha512)
    return hashing.hexdigest()
while True:
    print(client_A.recv(1024).decode())
    #key = client_A.recv(1024).decode()
    #print(key)
    while True:
        message = input("enter the message: ")
        encrypted_message = encrypt(message, key)
        hmac_value = HMAC_cal(key,message)
        client_A.send(bytes(hmac_value + encrypted_message, "utf-8"))
        server_response = client_A.recv(1024).decode()
        decrypted_response = decrypt(server_response,key)
        print("server_socket response:", decrypted_response)

        if message.lower() == 'exit':
            break
    client_A.close()
